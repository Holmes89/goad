// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mail.proto

package mail

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Mail struct {
	Uuid                 string               `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	To                   string               `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	From                 string               `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	Sent                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=sent,proto3" json:"sent,omitempty"`
	Read                 bool                 `protobuf:"varint,5,opt,name=read,proto3" json:"read,omitempty"`
	Body                 string               `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`
	Subject              string               `protobuf:"bytes,7,opt,name=subject,proto3" json:"subject,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Mail) Reset()         { *m = Mail{} }
func (m *Mail) String() string { return proto.CompactTextString(m) }
func (*Mail) ProtoMessage()    {}
func (*Mail) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cda5f053e74676b, []int{0}
}

func (m *Mail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mail.Unmarshal(m, b)
}
func (m *Mail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mail.Marshal(b, m, deterministic)
}
func (m *Mail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mail.Merge(m, src)
}
func (m *Mail) XXX_Size() int {
	return xxx_messageInfo_Mail.Size(m)
}
func (m *Mail) XXX_DiscardUnknown() {
	xxx_messageInfo_Mail.DiscardUnknown(m)
}

var xxx_messageInfo_Mail proto.InternalMessageInfo

func (m *Mail) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Mail) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Mail) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Mail) GetSent() *timestamp.Timestamp {
	if m != nil {
		return m.Sent
	}
	return nil
}

func (m *Mail) GetRead() bool {
	if m != nil {
		return m.Read
	}
	return false
}

func (m *Mail) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Mail) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

type MailID struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MailID) Reset()         { *m = MailID{} }
func (m *MailID) String() string { return proto.CompactTextString(m) }
func (*MailID) ProtoMessage()    {}
func (*MailID) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cda5f053e74676b, []int{1}
}

func (m *MailID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MailID.Unmarshal(m, b)
}
func (m *MailID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MailID.Marshal(b, m, deterministic)
}
func (m *MailID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MailID.Merge(m, src)
}
func (m *MailID) XXX_Size() int {
	return xxx_messageInfo_MailID.Size(m)
}
func (m *MailID) XXX_DiscardUnknown() {
	xxx_messageInfo_MailID.DiscardUnknown(m)
}

var xxx_messageInfo_MailID proto.InternalMessageInfo

func (m *MailID) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *MailID) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type GetMailRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	All                  bool     `protobuf:"varint,3,opt,name=all,proto3" json:"all,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMailRequest) Reset()         { *m = GetMailRequest{} }
func (m *GetMailRequest) String() string { return proto.CompactTextString(m) }
func (*GetMailRequest) ProtoMessage()    {}
func (*GetMailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cda5f053e74676b, []int{2}
}

func (m *GetMailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMailRequest.Unmarshal(m, b)
}
func (m *GetMailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMailRequest.Marshal(b, m, deterministic)
}
func (m *GetMailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMailRequest.Merge(m, src)
}
func (m *GetMailRequest) XXX_Size() int {
	return xxx_messageInfo_GetMailRequest.Size(m)
}
func (m *GetMailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMailRequest proto.InternalMessageInfo

func (m *GetMailRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GetMailRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *GetMailRequest) GetAll() bool {
	if m != nil {
		return m.All
	}
	return false
}

type GetMailResponse struct {
	Mail                 []*Mail  `protobuf:"bytes,1,rep,name=mail,proto3" json:"mail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMailResponse) Reset()         { *m = GetMailResponse{} }
func (m *GetMailResponse) String() string { return proto.CompactTextString(m) }
func (*GetMailResponse) ProtoMessage()    {}
func (*GetMailResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cda5f053e74676b, []int{3}
}

func (m *GetMailResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMailResponse.Unmarshal(m, b)
}
func (m *GetMailResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMailResponse.Marshal(b, m, deterministic)
}
func (m *GetMailResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMailResponse.Merge(m, src)
}
func (m *GetMailResponse) XXX_Size() int {
	return xxx_messageInfo_GetMailResponse.Size(m)
}
func (m *GetMailResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMailResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMailResponse proto.InternalMessageInfo

func (m *GetMailResponse) GetMail() []*Mail {
	if m != nil {
		return m.Mail
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cda5f053e74676b, []int{4}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Mail)(nil), "mail.Mail")
	proto.RegisterType((*MailID)(nil), "mail.MailID")
	proto.RegisterType((*GetMailRequest)(nil), "mail.GetMailRequest")
	proto.RegisterType((*GetMailResponse)(nil), "mail.GetMailResponse")
	proto.RegisterType((*Empty)(nil), "mail.Empty")
}

func init() { proto.RegisterFile("mail.proto", fileDescriptor_7cda5f053e74676b) }

var fileDescriptor_7cda5f053e74676b = []byte{
	// 369 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xc1, 0x6e, 0x9b, 0x40,
	0x10, 0x86, 0xbd, 0x18, 0x1b, 0x3a, 0xae, 0xdc, 0x6a, 0xd5, 0x4a, 0x2b, 0x0e, 0x2d, 0x5a, 0x55,
	0x15, 0xbd, 0x60, 0xd5, 0xbd, 0xf8, 0x01, 0x5c, 0x45, 0x3e, 0xf8, 0x42, 0x92, 0x07, 0x80, 0x30,
	0xb6, 0x48, 0x80, 0x25, 0xb0, 0x1c, 0xfc, 0x56, 0x79, 0xa9, 0xbc, 0x47, 0xb4, 0xb3, 0xb6, 0x63,
	0xa2, 0x48, 0xb9, 0xfd, 0xf3, 0xf3, 0xcd, 0x3f, 0xc3, 0xee, 0x02, 0x54, 0x69, 0x51, 0xc6, 0x4d,
	0xab, 0xb4, 0xe2, 0xae, 0xd1, 0xc1, 0xcf, 0xbd, 0x52, 0xfb, 0x12, 0x17, 0xe4, 0x65, 0xfd, 0x6e,
	0xa1, 0x8b, 0x0a, 0x3b, 0x9d, 0x56, 0x8d, 0xc5, 0xe4, 0x13, 0x03, 0x77, 0x9b, 0x16, 0x25, 0xe7,
	0xe0, 0xf6, 0x7d, 0x91, 0x0b, 0x16, 0xb2, 0xe8, 0x53, 0x42, 0x9a, 0xcf, 0xc1, 0xd1, 0x4a, 0x38,
	0xe4, 0x38, 0x5a, 0x19, 0x66, 0xd7, 0xaa, 0x4a, 0x8c, 0x2d, 0x63, 0x34, 0x8f, 0xc1, 0xed, 0xb0,
	0xd6, 0xc2, 0x0d, 0x59, 0x34, 0x5b, 0x06, 0xb1, 0x1d, 0x18, 0x9f, 0x06, 0xc6, 0x37, 0xa7, 0x81,
	0x09, 0x71, 0x26, 0xa3, 0xc5, 0x34, 0x17, 0x93, 0x90, 0x45, 0x7e, 0x42, 0xda, 0x78, 0x99, 0xca,
	0x0f, 0x62, 0x6a, 0x73, 0x8d, 0xe6, 0x02, 0xbc, 0xae, 0xcf, 0xee, 0xf1, 0x4e, 0x0b, 0x8f, 0xec,
	0x53, 0x29, 0x57, 0x30, 0x35, 0x1b, 0x6f, 0xd6, 0xef, 0xee, 0x1c, 0x80, 0xdf, 0x77, 0xd8, 0xd6,
	0x69, 0x85, 0xc7, 0xcd, 0xcf, 0xb5, 0x4c, 0x60, 0x7e, 0x85, 0xda, 0x34, 0x27, 0xf8, 0xd8, 0x63,
	0xa7, 0x07, 0x34, 0x1b, 0xd2, 0xe7, 0x74, 0xe7, 0x22, 0xfd, 0x2b, 0x8c, 0xd3, 0xb2, 0xa4, 0x03,
	0xf0, 0x13, 0x23, 0xe5, 0x5f, 0xf8, 0x72, 0xce, 0xec, 0x1a, 0x55, 0x77, 0xc8, 0x7f, 0x00, 0x1d,
	0xbe, 0x60, 0xe1, 0x38, 0x9a, 0x2d, 0x21, 0xa6, 0x5b, 0x21, 0x82, 0x7c, 0xe9, 0xc1, 0xe4, 0x7f,
	0xd5, 0xe8, 0xc3, 0xf2, 0x99, 0xd9, 0x5f, 0xc1, 0x96, 0xaf, 0xc0, 0x3b, 0xc6, 0xf0, 0x6f, 0xb6,
	0x61, 0xb8, 0x69, 0xf0, 0xfd, 0x8d, 0x6b, 0x67, 0xc9, 0x11, 0xff, 0x05, 0xfe, 0x35, 0xd6, 0x39,
	0xb5, 0x5e, 0xcc, 0x0a, 0x2e, 0xb4, 0x1c, 0xf1, 0x3f, 0x00, 0x6b, 0x2c, 0x51, 0x23, 0x71, 0x9f,
	0x5f, 0xbf, 0x6d, 0xd6, 0xc1, 0xcc, 0x56, 0xb4, 0x93, 0x1c, 0xf1, 0xdf, 0xe0, 0x6f, 0xd3, 0xf6,
	0x21, 0x31, 0x37, 0x33, 0x04, 0x87, 0x91, 0x11, 0x80, 0xe1, 0x6e, 0xeb, 0xf6, 0x03, 0x32, 0x9b,
	0xd2, 0x6b, 0xf8, 0xf7, 0x12, 0x00, 0x00, 0xff, 0xff, 0xb5, 0x08, 0xcc, 0x53, 0xa0, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MailerClient is the client API for Mailer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MailerClient interface {
	GetMail(ctx context.Context, in *GetMailRequest, opts ...grpc.CallOption) (*GetMailResponse, error)
	SendMail(ctx context.Context, in *Mail, opts ...grpc.CallOption) (*Mail, error)
	DeleteMail(ctx context.Context, in *MailID, opts ...grpc.CallOption) (*Empty, error)
	MarkRead(ctx context.Context, in *MailID, opts ...grpc.CallOption) (*Mail, error)
	MarkUnread(ctx context.Context, in *MailID, opts ...grpc.CallOption) (*Mail, error)
}

type mailerClient struct {
	cc *grpc.ClientConn
}

func NewMailerClient(cc *grpc.ClientConn) MailerClient {
	return &mailerClient{cc}
}

func (c *mailerClient) GetMail(ctx context.Context, in *GetMailRequest, opts ...grpc.CallOption) (*GetMailResponse, error) {
	out := new(GetMailResponse)
	err := c.cc.Invoke(ctx, "/mail.Mailer/GetMail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailerClient) SendMail(ctx context.Context, in *Mail, opts ...grpc.CallOption) (*Mail, error) {
	out := new(Mail)
	err := c.cc.Invoke(ctx, "/mail.Mailer/SendMail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailerClient) DeleteMail(ctx context.Context, in *MailID, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/mail.Mailer/DeleteMail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailerClient) MarkRead(ctx context.Context, in *MailID, opts ...grpc.CallOption) (*Mail, error) {
	out := new(Mail)
	err := c.cc.Invoke(ctx, "/mail.Mailer/MarkRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailerClient) MarkUnread(ctx context.Context, in *MailID, opts ...grpc.CallOption) (*Mail, error) {
	out := new(Mail)
	err := c.cc.Invoke(ctx, "/mail.Mailer/MarkUnread", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MailerServer is the server API for Mailer service.
type MailerServer interface {
	GetMail(context.Context, *GetMailRequest) (*GetMailResponse, error)
	SendMail(context.Context, *Mail) (*Mail, error)
	DeleteMail(context.Context, *MailID) (*Empty, error)
	MarkRead(context.Context, *MailID) (*Mail, error)
	MarkUnread(context.Context, *MailID) (*Mail, error)
}

func RegisterMailerServer(s *grpc.Server, srv MailerServer) {
	s.RegisterService(&_Mailer_serviceDesc, srv)
}

func _Mailer_GetMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailerServer).GetMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mail.Mailer/GetMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailerServer).GetMail(ctx, req.(*GetMailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mailer_SendMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Mail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailerServer).SendMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mail.Mailer/SendMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailerServer).SendMail(ctx, req.(*Mail))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mailer_DeleteMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MailID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailerServer).DeleteMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mail.Mailer/DeleteMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailerServer).DeleteMail(ctx, req.(*MailID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mailer_MarkRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MailID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailerServer).MarkRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mail.Mailer/MarkRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailerServer).MarkRead(ctx, req.(*MailID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mailer_MarkUnread_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MailID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailerServer).MarkUnread(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mail.Mailer/MarkUnread",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailerServer).MarkUnread(ctx, req.(*MailID))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mailer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mail.Mailer",
	HandlerType: (*MailerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMail",
			Handler:    _Mailer_GetMail_Handler,
		},
		{
			MethodName: "SendMail",
			Handler:    _Mailer_SendMail_Handler,
		},
		{
			MethodName: "DeleteMail",
			Handler:    _Mailer_DeleteMail_Handler,
		},
		{
			MethodName: "MarkRead",
			Handler:    _Mailer_MarkRead_Handler,
		},
		{
			MethodName: "MarkUnread",
			Handler:    _Mailer_MarkUnread_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mail.proto",
}
