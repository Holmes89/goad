d// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package message

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message struct {
	Uuid                 string               `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Room                 string               `protobuf:"bytes,2,opt,name=room,proto3" json:"room,omitempty"`
	From                 string               `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	Sent                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=sent,proto3" json:"sent,omitempty"`
	Body                 string               `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Message) GetRoom() string {
	if m != nil {
		return m.Room
	}
	return ""
}

func (m *Message) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Message) GetSent() *timestamp.Timestamp {
	if m != nil {
		return m.Sent
	}
	return nil
}

func (m *Message) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func init() {
	proto.RegisterType((*Message)(nil), "message.Message")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd) }

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8f, 0xb1, 0x6e, 0x83, 0x30,
	0x14, 0x45, 0xeb, 0x96, 0x16, 0x61, 0x54, 0xa9, 0xf2, 0x64, 0xb1, 0x14, 0x31, 0x31, 0x99, 0x88,
	0x0c, 0xf9, 0x81, 0xac, 0x59, 0x48, 0x7e, 0x00, 0xc4, 0xc3, 0x42, 0x8a, 0x79, 0xc8, 0x36, 0x43,
	0x3e, 0x21, 0x7f, 0x1d, 0xd9, 0xc6, 0x53, 0xb6, 0xeb, 0xa3, 0xab, 0x77, 0xae, 0xe9, 0xaf, 0x02,
	0x63, 0x7a, 0x09, 0x62, 0xd5, 0x68, 0x91, 0xa5, 0xfb, 0xb3, 0xf8, 0x97, 0x88, 0xf2, 0x0e, 0x8d,
	0xc7, 0xc3, 0x36, 0x35, 0x76, 0x56, 0x60, 0x6c, 0xaf, 0xd6, 0xd0, 0xac, 0x9e, 0x84, 0xa6, 0x97,
	0x50, 0x66, 0x8c, 0x26, 0xdb, 0x36, 0x8f, 0x9c, 0x94, 0xa4, 0xce, 0x3a, 0x9f, 0x1d, 0xd3, 0x88,
	0x8a, 0x7f, 0x06, 0xe6, 0xb2, 0x63, 0x93, 0x46, 0xc5, 0xbf, 0x02, 0x73, 0x99, 0x09, 0x9a, 0x18,
	0x58, 0x2c, 0x4f, 0x4a, 0x52, 0xe7, 0x6d, 0x21, 0x82, 0x57, 0x44, 0xaf, 0xb8, 0x45, 0x6f, 0xe7,
	0x7b, 0xee, 0xc6, 0x80, 0xe3, 0x83, 0x7f, 0x87, 0x1b, 0x2e, 0xb7, 0x67, 0x9a, 0xb9, 0x29, 0xb0,
	0x48, 0xd0, 0xec, 0x44, 0xf3, 0x2b, 0x2c, 0x63, 0xdc, 0xf6, 0x27, 0xe2, 0x0f, 0x77, 0x52, 0xbc,
	0x91, 0xea, 0xa3, 0x26, 0x07, 0x32, 0xfc, 0x78, 0xe7, 0xf1, 0x15, 0x00, 0x00, 0xff, 0xff, 0x5f,
	0xf9, 0x21, 0xc5, 0x13, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MessengerClient is the client API for Messenger service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessengerClient interface {
	SendMessage(ctx context.Context, opts ...grpc.CallOption) (Messenger_SendMessageClient, error)
}

type messengerClient struct {
	cc *grpc.ClientConn
}

func NewMessengerClient(cc *grpc.ClientConn) MessengerClient {
	return &messengerClient{cc}
}

func (c *messengerClient) SendMessage(ctx context.Context, opts ...grpc.CallOption) (Messenger_SendMessageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Messenger_serviceDesc.Streams[0], "/message.Messenger/SendMessage", opts...)
	if err != nil {
		return nil, err
	}
	x := &messengerSendMessageClient{stream}
	return x, nil
}

type Messenger_SendMessageClient interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ClientStream
}

type messengerSendMessageClient struct {
	grpc.ClientStream
}

func (x *messengerSendMessageClient) Send(m *Message) error {
	return x.ClientStream.SendMsg(m)
}

func (x *messengerSendMessageClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MessengerServer is the server API for Messenger service.
type MessengerServer interface {
	SendMessage(Messenger_SendMessageServer) error
}

func RegisterMessengerServer(s *grpc.Server, srv MessengerServer) {
	s.RegisterService(&_Messenger_serviceDesc, srv)
}

func _Messenger_SendMessage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MessengerServer).SendMessage(&messengerSendMessageServer{stream})
}

type Messenger_SendMessageServer interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ServerStream
}

type messengerSendMessageServer struct {
	grpc.ServerStream
}

func (x *messengerSendMessageServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func (x *messengerSendMessageServer) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Messenger_serviceDesc = grpc.ServiceDesc{
	ServiceName: "message.Messenger",
	HandlerType: (*MessengerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SendMessage",
			Handler:       _Messenger_SendMessage_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "message.proto",
}
